#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass beamer
\begin_preamble
\DeclareMathAlphabet{\mathcal}{OMS}{cmsy}{m}{n}
\usetheme[oldstylearrows,nologo,numbers,algorists]{CIMAT}

% or ...

\setbeamercovered{transparent}
% or whatever (possibly just delete it)
\usepackage[euler-digits]{eulervm}
\usefonttheme{professionalfonts}
\usepackage{dsfont}
%\usepackage[table]{xcolor}
%\usepackage{booktabs}

%\usepackage[usenames,dvipsnames]{xcolor}
\usepackage{tcolorbox}
\usepackage{tabularx}
\usepackage{array}
\usepackage{colortbl}
\tcbuselibrary{skins,fitting}

\newcolumntype{Y}{>{\raggedleft\arraybackslash}X}

\DeclareMathOperator{\posdef}{+def}
\DeclareMathOperator{\tr}{tr}
\DeclareMathOperator{\cov}{cov}
\DeclareMathOperator{\variance}{var}
\DeclareMathOperator{\lcp}{lcp}
\renewcommand{\mathbf}{\boldsymbol}
\DeclareMathOperator{\idv}{div}
\DeclareMathOperator{\diag}{diag}

\SetKwInOut{Input}{Input}
\SetKwInOut{Output}{Output}
\SetKwInOut{Data}{Parameters}
\SetKwInOut{Result}{output}
\SetKw{struct}{struct}
\SetKw{KwTo}{to}
\SetKw{Throw}{throw}
\SetKw{KwRet}{return}
\SetKw{Return}{return}
\SetKwProg{Function}{function}{:}{end}
\SetKwProg{lFunction}{function}{}{}
\SetKwBlock{Begin}{begin}{end}
\SetKwRepeat{Repeat}{repeat}{until}
\SetKwIF{If}{ElseIf}{Else}{if}{then}{else if}{else:}{end}
\SetKwSwitch{Switch}{Case}{Other}{select}{for}{case}{otherwise}{end}{end}
\usepackage{algpseudocode}
\SetKwFor{For}{for}{do:}{end}
\SetKwFor{ForPar}{parallel for}{do:}{end}
\SetKwFor{ForEach}{for each}{do:}{end}
\SetKwFor{ForAll}{for all}{do:}{end}
\SetKwFor{While}{while}{do:}{end}

\SetKw{Static}{static}
\SetKw{Const}{const}
\SetKw{Struct}{struct}
\SetKw{Class}{class}
\SetKw{New}{new}
\SetKw{Delete}{delete}
\SetKw{Char}{char}
\SetKw{Integer}{int}
\SetKw{Long}{long}
\SetKw{Unsigned}{unsigned}
\SetKw{Signed}{signed}
\SetKw{Boolean}{bool}
\SetKw{KwNot}{not}
\SetKw{KwAnd}{and}
\SetKw{KwOr}{or}
\SetKw{KwXor}{xor}

\SetKwFunction{node}{node}
\SetKwFunction{sort}{std::sort}
\SetKwFunction{lcp}{lcp}
\SetKwFunction{strlen}{strlen}
\SetKwFunction{strcmp}{strcmp}
\SetKwFunction{fibonacci}{fibonacci}
\SetKwFunction{pushback}{push-back}
\SetKwFunction{alphanumeric}{to-alpha}
\SetKwFunction{back}{back}
\SetKwFunction{neighborhood}{neighborhood}
\SetKwFunction{buildsuffix}{build-suffix-array}
\SetKwFunction{isEmpty}{is-empty}
\SetKwFunction{isNull}{is-null}
\SetKwFunction{isBetter}{can-improve}
\SetKwFunction{isUnvisited}{is-unvisited}
\SetKwFunction{isValid}{is-valid}
\SetKwFunction{improve}{visit-or-improve}
\SetKwFunction{mycomparator}{cmp}

\SetKwFunction{trie}{trie}
\SetKwFunction{map}{std::map}
\SetKwFunction{addword}{add-word}
\SetKwFunction{findword}{find-word}
\SetKwFunction{isEmpty}{is-empty}
\SetKwFunction{isNull}{is-null}

\SetSideCommentRight

\newcolumntype{Y}{>{\raggedleft\arraybackslash}X}

\tcbset{smallvalues/.style={enhanced,fonttitle=\bfseries,fontupper=\normalsize\sffamily,
colback=zorange!10!white,colframe=zorange!90!black,colbacktitle=zorange!90!white,
coltitle=white,center title}}
\end_preamble
\use_default_options false
\begin_modules
algorithm2e
\end_modules
\maintain_unincluded_children false
\language british
\language_package babel
\inputencoding auto
\fontencoding global
\font_roman "times" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_package amsmath 2
\use_package amssymb 2
\use_package cancel 0
\use_package esint 0
\use_package mathdots 1
\use_package mathtools 0
\use_package mhchem 1
\use_package stackrel 0
\use_package stmaryrd 0
\use_package undertilde 0
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 0
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 2
\tocdepth 2
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style french
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Dynamic Programming
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Dynamic Programming
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
optional, use only with long paper titles
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Author
Ulises Tirado Zatarain
\begin_inset space ~
\end_inset

 
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Ulises Tirado Zatarain
\end_layout

\end_inset

 
\begin_inset Flex InstituteMark
status open

\begin_layout Plain Layout
1
\end_layout

\end_inset


\begin_inset Newline newline
\end_inset

(ulises.tirado@cimat.mx) 
\end_layout

\begin_layout Institute
\begin_inset Flex InstituteMark
status collapsed

\begin_layout Plain Layout
1
\end_layout

\end_inset

Algorists Group
\begin_inset Argument 1
status open

\begin_layout Plain Layout
Algorists
\end_layout

\end_inset


\end_layout

\begin_layout Date
November, 2020
\begin_inset Note Note
status collapsed

\begin_layout Itemize
Either use conference name or its abbreviation.
 
\end_layout

\begin_layout Itemize
Not really informative to the audience, more for people (including yourself)
 who are reading the slides online
\end_layout

\end_inset


\begin_inset Argument 1
status open

\begin_layout Plain Layout
Nov, 2020
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you have a file called "institution-logo-filename.xxx", where xxx is a
 graphic format that can be processed by latex or pdflatex, resp., then you
 can add a logo by uncommenting the following:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
pgfdeclareimage[height=0.75cm]{algorists}{algorists.png}
\end_layout

\begin_layout Plain Layout


\backslash
logo{
\backslash
pgfuseimage{algorists}}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
The following causes the table of contents to be shown at the beginning
 of every subsection.
 Delete this, if you do not want it.
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
AtBeginSubsection[]{
\end_layout

\begin_layout Plain Layout

  
\backslash
frame<beamer>{ 
\end_layout

\begin_layout Plain Layout

    
\backslash
frametitle{Outline}   
\end_layout

\begin_layout Plain Layout

    
\backslash
tableofcontents[currentsection,currentsubsection] 
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
If you wish to uncover everything in a step-wise fashion, uncomment the
 following command:
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout

%
\backslash
beamerdefaultoverlayspecification{<+->}
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Outline
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Structuring a talk is a difficult task and the following structure may not
 be suitable.
 Here are some rules that apply for this solution: 
\end_layout

\begin_layout Itemize
Exactly two or three sections (other than the summary).
 
\end_layout

\begin_layout Itemize
At *most* three subsections per section.
 
\end_layout

\begin_layout Itemize
Talk about 30s to 2min per frame.
 So there should be between about 15 and 30 frames, all told.
\end_layout

\begin_layout Itemize
A conference audience is likely to know very little of what you are going
 to talk about.
 So *simplify*! 
\end_layout

\begin_layout Itemize
In a 20min talk, getting the main ideas across is hard enough.
 Leave out details, even if it means being less precise than you think necessary.
 
\end_layout

\begin_layout Itemize
If you omit details that are vital to the proof/implementation, just say
 so once.
 Everybody will be happy with that.
 
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Definitions
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Definitions
\end_layout

\end_inset


\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
What is dynamic programming?
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Definition
\begin_inset Argument 2
status open

\begin_layout Plain Layout
Dynamic Programming
\end_layout

\end_inset

 It's a technique for mathematical programming (optimization), or in other
 words, a paradigm to problem solving.
 So, the word 
\begin_inset Quotes eld
\end_inset

programming
\begin_inset Quotes erd
\end_inset

 is not directly meaning a computer program or an algorithm.
 The actual meaning is more similar to linear programming or planning or
 taking decisions.
\end_layout

\begin_layout Itemize
It consists in:
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
Split the problem in smaller sub-problems:
\end_layout

\begin_deeper
\begin_layout Itemize
recurrence relationship
\end_layout

\begin_layout Itemize
optimal sub-structure
\end_layout

\end_deeper
\begin_layout Itemize
We stop when have a trivial problems (base cases)
\end_layout

\begin_layout Itemize
Store smaller solutions (memoization, states) 
\end_layout

\begin_layout Itemize
Merge the solutions when is need it
\end_layout

\begin_layout Itemize
Difference with D&C: 
\series bold
overlapping and compute a value
\end_layout

\end_deeper
\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Subsection
A particular problem
\end_layout

\begin_layout Frame
\begin_inset Argument 4
status open

\begin_layout Plain Layout
Recurrence relationship and tree of calls
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<1->{
\end_layout

\end_inset

Fibonacci sequence (
\begin_inset Formula $0,1,1,2,3,5,\ldots$
\end_inset

) is the simplest examples
\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<2->{
\end_layout

\end_inset


\begin_inset Formula $F(n)=\begin{cases}
1 & n=1\\
F(n-1)+F(n-2) & n>1\\
0 & \textrm{otherwise}
\end{cases}$
\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\align center
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
visible<3->{
\end_layout

\end_inset


\begin_inset Graphics
	filename figures/fibonacci-tree.png
	lyxscale 50
	scale 50
	BoundingBox 100bp 180bp 930bp 710bp
	clip

\end_inset


\begin_inset ERT
status open

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\end_deeper
\begin_layout Standard
\begin_inset Separator parbreak
\end_inset


\end_layout

\begin_layout Section*
\start_of_appendix
Appendix
\end_layout

\begin_layout Subsection*
References
\end_layout

\begin_layout Frame
\begin_inset Argument 3
status collapsed

\begin_layout Plain Layout
allowframebreaks
\end_layout

\end_inset


\begin_inset Argument 4
status open

\begin_layout Plain Layout
References
\end_layout

\end_inset


\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
beamertemplatebookbibitems
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Introduction to Algorithms, Thomas H.
 Cormen
\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Algorists: Github Repository"
target "https://github.com/Gansito144/algorists/tree/master/talks/dynamic_programming"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "Wikipedia: Dynamic Programming"
target "https://en.wikipedia.org/wiki/Dynamic_programming"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "HackerRank"
target "https://www.hackerrank.com"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "CodeForces"
target "https://codeforces.com"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "OmegaUp"
target "https://omegaup.com"
literal "false"

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset CommandInset href
LatexCommand href
name "LeetCode"
target "https://leetcode.com"
literal "false"

\end_inset


\end_layout

\end_deeper
\end_body
\end_document
